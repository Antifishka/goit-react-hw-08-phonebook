{"version":3,"file":"static/js/287.0b135a5f.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/Button/Button.styled.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Button/Button.jsx","components/Contact/Contact.styled.js","components/Box/Box.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","redux/contacts/filter-slice.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsFormLoading = state => state.contacts.isFormLoading;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter)\n        );\n});","import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.radii.normal};\n    border: ${p => p.theme.borders.button};\n    box-shadow: ${p => p.theme.shadows.boxShadow};\n    outline: none;\n    cursor: pointer;\n    \n    background-color: ${p => p.theme.colors.background};\n    color: inherit;\n\n    transition: ${p => p.theme.transition.main};\n\n    :hover,\n    :active{\n        background-color: ${p => p.theme.colors.accent};\n        border-color: ${p => p.theme.colors.accent};\n        color: ${p => p.theme.colors.secondaryText};\n    }\n`","import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const BoxForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: ${p => p.theme.space[4]}px;\n\n    min-width: ${p => p.theme.sizes.minWidth};\n    border: ${p => p.theme.borders.button};\n    border-radius: ${p => p.theme.radii.normal};\n    box-shadow: ${p => p.theme.shadows.boxShadow};\n    padding-top: ${p => p.theme.space[4]}px;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const FieldForm = styled.label`\n    width: 100%;\n    text-align: left;\n`;\n\nexport const InputForm = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n`;\n\nexport const ButtonForm = styled(ButtonStyled)`\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    min-width: 124px;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\nimport { selectContacts, selectIsFormLoading } from \"redux/contacts/contacts-selectors\";\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport { BoxForm, FieldForm, InputForm, ButtonForm, Error } from './ContactEditor.styled';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst basicSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .required('Name is required'),\n    phone: yup\n        .string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n        .required('Number is required'),\n});\n \nconst ContactEditor = () => {\n    const contacts = useSelector(selectContacts);\n    const isFormLoading = useSelector(selectIsFormLoading);\n    const dispatch = useDispatch();\n\n    const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n        initialValues: {\n            name: '',\n            phone: '',\n        },\n        validationSchema: basicSchema,\n        onSubmit: ({ name, phone }, { resetForm }) => {\n            console.log(name, phone);\n\n            const normalizedName = name.toLowerCase();\n\n            const checkByName = contacts.find(contact =>\n                contact.name.toLowerCase() === normalizedName);\n\n            if (checkByName) {\n                return toast(`${name} is already in contacts.`, { icon: 'ℹ️'});\n            };\n\n            const contact = {\n                name,\n                phone,\n            };\n\n            dispatch(addContact(contact));\n            toast.success('Contact added!');\n\n            resetForm();\n        },\n    });\n\n    const nameId = nanoid();\n    const phoneId = nanoid();\n\n    return (\n        <BoxForm onSubmit={handleSubmit}>\n            <FieldForm htmlFor={nameId}>Name\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameId}\n                    value={values.name}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} /> \n                {errors.name && touched.name && <Error>{errors.name}</Error>}\n            </FieldForm>\n            <FieldForm htmlFor={phoneId}>Phone number\n                <InputForm\n                    type=\"tel\"\n                    name=\"phone\"\n                    id={phoneId}\n                    value={values.phone}\n                    placeholder=\"+38-(012)-345-67-89\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} />\n                {errors.phone && touched.phone &&<Error>{errors.phone}</Error>}\n            </FieldForm>    \n            <ButtonForm type=\"submit\">{isFormLoading ? 'Adding...' : 'Add contact'}\n            </ButtonForm>        \n        </BoxForm> \n    );\n};\n    \nexport default ContactEditor;\n\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({ type = 'button', onClick, children }) => {\n  return (\n    <ButtonStyled type={type} onClick={onClick}>\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};","import styled from '@emotion/styled';\n\nexport const ContactText = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[0]}px;\n    padding-right: ${p => p.theme.space[0]}px;\n`\n\nexport const ContactPhone = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    min-width: 220px;\n    text-align: left;\n`","import styled from \"styled-components\";\nimport { typography, space, color, layout, flexbox, grid, border } from 'styled-system'\n\nexport const Box = styled('div')(\n    typography,\n    space,\n    color,\n    layout,\n    flexbox,\n    grid,\n    border,\n);","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contacts-operations\";\nimport { Button } from \"components/Button/Button\";\nimport { ContactText, ContactPhone } from \"./Contact.styled\";\nimport { AiOutlineUserAdd, AiOutlineDelete } from 'react-icons/ai';\nimport { BsTelephonePlus } from 'react-icons/bs';\nimport { Box } from '../Box/Box';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, phone } ) => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => dispatch(deleteContact(id));\n  \n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"70%\">\n        <ContactText>\n          <AiOutlineUserAdd size={18} color={\"#1976d2\"} />\n          {name}\n        </ContactText>\n        <ContactPhone>\n          <BsTelephonePlus size={17} color={\"#1976d2\"} />\n          {phone}\n        </ContactPhone>\n      </Box>\n      \n      <Button type=\"button\" onClick={handleDelete}>\n        <AiOutlineDelete size={18} />\n      </Button>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n    min-width: ${p => p.theme.sizes.minWidth};\n`;\n\nexport const ContactItem = styled.li`\n    /* display: flex;\n    justify-content: space-between;\n    align-items: center; */\n    width: 100%;\n    \n    font-size: ${p => p.theme.fontSizes.m};\n\n    :not(:first-of-type){\n       border-top: ${p => p.theme.borders.normal}; \n    }\n`;","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport { Contacts, ContactItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Contacts>\n            {visibleContacts.map(({ id, name, phone }) =>\n                <ContactItem key={id}>\n                    <Contact id={id} name={name} phone={phone}/>\n                </ContactItem>\n            )}\n        </Contacts>\n    );\n}; \n\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterInitialState = '';\n\nconst filterSlice = createSlice({\n    name: \"filter\",\n    initialState: filterInitialState,\n    reducers: {\n        setFilter(state, action) {\n            return action.payload;\n        },\n    },\n});\n\n// Экспортируем генераторы экшенов и редюсер\nexport const { setFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;","import styled from '@emotion/styled';\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n\n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"../../redux/contacts/contacts-selectors\";\nimport { setFilter } from \"../../redux/contacts/filter-slice\";\nimport { FieldFilter, InputFilter } from \"./Filter.styled\";\nimport { Box } from \"components/Box/Box\";\nimport { theme } from \"theme\";\n\nexport const Filter = ({ onChange }) => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value));\n    };\n\n    return (\n        <Box minWidth={theme.sizes.minWidth} mb={4} textAlign=\"left\">\n            <FieldFilter htmlFor=\"\">Find contacts by name\n                <InputFilter\n                    type=\"text\"\n                    value={filter}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={changeFilter}\n                />\n            </FieldFilter>\n        </Box>\n    );\n};   ","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from \"components/Filter/Filter\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\nimport toast from 'react-hot-toast';\n// import { Box } from '../Box/Box';\nimport { theme } from 'theme';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    error && toast.error('No response from server!');\n  }, [dispatch, error]);\n\n  const showContacs = isLoading && !error;\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <Filter />\n      {showContacs ? <SyncLoader color={theme.colors.accent} /> : <ContactList />}\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectIsFormLoading","isFormLoading","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ButtonStyled","styled","p","theme","space","radii","normal","borders","button","shadows","boxShadow","colors","background","transition","main","accent","secondaryText","BoxForm","sizes","minWidth","FieldForm","InputForm","ButtonForm","Error","basicSchema","yup","shape","min","max","matches","required","phone","useSelector","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","normalizedName","checkByName","find","contact","toast","icon","addContact","values","errors","touched","handleBlur","handleChange","handleSubmit","nameId","nanoid","phoneId","htmlFor","type","id","value","placeholder","onChange","onBlur","Button","onClick","children","ContactText","ContactPhone","Box","typography","color","layout","flexbox","grid","border","Contact","display","alignItems","justifyContent","width","size","deleteContact","Contacts","ContactItem","fontSizes","m","ContactList","visibleContacts","map","filterSlice","createSlice","initialState","reducers","setFilter","action","payload","actions","FieldFilter","reducer","InputFilter","s","Filter","mb","textAlign","e","currentTarget","useEffect","fetchContacts","showContacs","Helmet"],"sourceRoot":""}