{"version":3,"file":"static/js/798.a05cdabd.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/filter-selectors\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsFormLoading = state => state.contacts.isFormLoading;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter)\n        );\n});","import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const BoxForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: ${p => p.theme.space[4]}px;\n\n    min-width: ${p => p.theme.sizes.minWidth};\n    max-width: ${p => p.theme.sizes.maxWidth};\n    border: ${p => p.theme.borders.button};\n    border-radius: ${p => p.theme.radii.normal};\n    box-shadow: ${p => p.theme.shadows.boxShadow};\n    padding-top: ${p => p.theme.space[4]}px;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n    margin-left: auto;\n    margin-right: auto;\n\n    background-color: #fff;\n`;\n\nexport const FieldForm = styled.label`\n    width: 100%;\n    text-align: left;\n`;\n\nexport const InputForm = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n`;\n\nexport const ButtonForm = styled(ButtonStyled)`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\nimport { selectContacts, selectIsFormLoading } from \"redux/contacts/contacts-selectors\";\nimport { BsPersonPlus } from 'react-icons/bs';\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport { BoxForm, FieldForm, InputForm, ButtonForm, Error } from './ContactEditor.styled';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst basicSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .required('Name is required'),\n    number: yup\n        .string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n        .required('Number is required'),\n});\n \nconst ContactEditor = () => {\n    const contacts = useSelector(selectContacts);\n    const isFormLoading = useSelector(selectIsFormLoading);\n    const dispatch = useDispatch();\n\n    const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n        initialValues: {\n            name: '',\n            number: '',\n        },\n        validationSchema: basicSchema,\n        onSubmit: ({ name, number }, { resetForm }) => {\n            console.log(name, number);\n\n            const normalizedName = name.toLowerCase();\n\n            const checkByName = contacts.find(contact =>\n                contact.name.toLowerCase() === normalizedName);\n\n            if (checkByName) {\n                return toast(`${name} is already in contacts.`, { icon: 'ℹ️'});\n            };\n\n            const contact = {\n                name,\n                number,\n            };\n\n            dispatch(addContact(contact));\n            toast.success('Contact added!');\n\n            resetForm();\n        },\n    });\n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    return (\n        <BoxForm onSubmit={handleSubmit}>\n            <FieldForm htmlFor={nameId}>Name\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameId}\n                    value={values.name}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} /> \n                {errors.name && touched.name && <Error>{errors.name}</Error>}\n            </FieldForm>\n            <FieldForm htmlFor={numberId}>Phone number\n                <InputForm\n                    type=\"tel\"\n                    name=\"number\"\n                    id={numberId}\n                    value={values.number}\n                    placeholder=\"+38-(012)-345-67-89\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} />\n                {errors.number && touched.number &&<Error>{errors.number}</Error>}\n            </FieldForm>    \n            <ButtonForm type=\"submit\">{isFormLoading ? 'Adding...' : 'Add contact'}\n                <BsPersonPlus size={18}/>\n            </ButtonForm>        \n        </BoxForm> \n    );\n};\n    \nexport default ContactEditor;\n\n","import styled from '@emotion/styled';\n\nexport const ContactText = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n`\n\nexport const ContactPhone = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    min-width: 220px;\n    text-align: left;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contacts-operations\";\nimport { Button } from \"components/Button/Button\";\nimport { ContactText, ContactPhone } from \"./Contact.styled\";\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { BsTelephonePlus } from 'react-icons/bs';\nimport { Box } from '../Box/Box';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, number } ) => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => dispatch(deleteContact(id));\n  \n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"70%\">\n        <ContactText>\n          <BsFillPersonFill />\n          {name}\n        </ContactText>\n        <ContactPhone>\n          <BsTelephonePlus size={17} color={\"#1976d2\"} />\n          {number}\n        </ContactPhone>\n      </Box>\n      \n      <Button type=\"button\" onClick={handleDelete}>\n        <AiOutlineDelete size={18} />\n      </Button>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n    position: relative;\n    min-width: ${p => p.theme.sizes.minWidth};\n    max-width: ${p => p.theme.sizes.maxWidth};\n    margin-left: auto;\n    margin-right: auto;\n    background-color: ${p => p.theme.colors.white};\n    padding: ${p => p.theme.space[4]}px;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.radii.box};\n    box-shadow: ${p => p.theme.shadows.box};\n`;\n\nexport const ContactItem = styled.li`\n    width: 100%;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[0]}px;\n    padding-right: ${p => p.theme.space[0]}px;\n    \n    font-size: ${p => p.theme.fontSizes.m};\n\n    transform: scale(1);\n    transition: ${p => p.theme.transition.main};\n\n    :not(:first-of-type){\n       border-top: ${p => p.theme.borders.normal}; \n    }\n\n    :hover,\n    :focus{\n        position: absolute;\n        transform: scale(1.02);\n        width: 100%;\n        right: 0;\n        z-index: 10;\n        padding: ${p => p.theme.space[4]}px;\n        \n        border-top: ${p => p.theme.borders.none}; \n        border-radius: ${p => p.theme.radii.box};\n        box-shadow: ${p => p.theme.shadows.box};\n\n        background-color: ${p => p.theme.colors.white};\n    } \n`;","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport { Contacts, ContactItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Contacts>\n            {visibleContacts.map(({ id, name, number }) =>\n                <ContactItem key={id}>\n                    <Contact id={id} name={name} number={number}/>\n                </ContactItem>\n            )}\n        </Contacts>\n    );\n}; \n\n\n","import styled from '@emotion/styled';\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: ${p => p.theme.radii.normal};\n    \n    background-color: inherit;\n\n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"redux/filter/filter-selectors\";\nimport { setFilter } from \"redux/contacts/contacts-slice\";\nimport { FieldFilter, InputFilter } from \"./Filter.styled\";\nimport { Box } from \"components/Box/Box\";\nimport { theme } from \"theme\";\nimport { Button } from \"components/Button/Button\";\nimport { BsPersonPlus } from 'react-icons/bs';\n\nexport const Filter = ({ onChange }) => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value));\n    };\n\n    return (\n        <Box minWidth={theme.sizes.minWidth}\n            mb={3}\n            mx=\"auto\"\n            p={3}\n            textAlign=\"left\"\n            maxWidth={theme.sizes.mediumWidth}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContaent=\"center\"\n            gridGap={[2, 2, 3]}\n            borderRadius={theme.radii.box}\n            boxShadow={theme.shadows.box}\n        backgroundColor={theme.colors.white}>\n            <FieldFilter htmlFor=\"\">\n                <InputFilter\n                    type=\"text\"\n                    value={filter}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={changeFilter}\n                />\n            </FieldFilter>\n            <Button>\n                <BsPersonPlus size={24}/>\n            </Button>\n        </Box>\n    );\n};   ","import { Box } from \"components/Box/Box\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { theme } from 'theme';\n\nexport const Loader = () => (\n    <Box display=\"flex\" justifyContent=\"center\">\n        <SyncLoader color={theme.colors.accent}/>\n    </Box>\n  \n);","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\nimport toast from 'react-hot-toast';\nimport { Box } from '../components/Box/Box';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    error && toast.error('No response from server!');\n  }, [dispatch, error]);\n\n  const showContacs = isLoading && !error;\n\n  return (\n    <Box p=\"16px 0\" as=\"main\">\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <Filter />\n      {showContacs ? <Loader /> : <ContactList />}\n    </Box>\n  );\n}"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsFormLoading","isFormLoading","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","BoxForm","styled","p","theme","space","sizes","minWidth","maxWidth","borders","button","radii","normal","shadows","boxShadow","FieldForm","InputForm","ButtonForm","ButtonStyled","Error","colors","basicSchema","yup","shape","min","max","matches","required","number","useSelector","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","normalizedName","checkByName","find","contact","toast","icon","addContact","values","errors","touched","handleBlur","handleChange","handleSubmit","nameId","nanoid","numberId","htmlFor","type","id","value","placeholder","onChange","onBlur","size","ContactText","ContactPhone","Contact","Box","display","alignItems","justifyContent","width","color","Button","onClick","deleteContact","Contacts","white","box","ContactItem","fontSizes","m","transition","main","none","ContactList","visibleContacts","map","FieldFilter","InputFilter","s","Filter","mb","mx","textAlign","justifyContaent","gridGap","borderRadius","backgroundColor","e","setFilter","currentTarget","Loader","useEffect","fetchContacts","showContacs","as","Helmet"],"sourceRoot":""}