{"version":3,"file":"static/js/601.f8cb206a.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/filter-selectors\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsFormLoading = state => state.contacts.isFormLoading;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter)\n        );\n});","import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const BoxForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: ${p => p.theme.space[5]}px;\n\n    text-align: center;\n`;\n\nexport const FieldForm = styled.label`\n    position: relative;   \n    width: 100%;\n    text-align: left;\n    font-size: ${p => theme.fontSizes.xs};\n\n    :focus-within{\n        color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const InputForm = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: 26px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: ${p => p.theme.radii.normal};\n    outline: none;\n\n    font: inherit;\n    font-size: ${p => theme.fontSizes.m};\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n\n    :focus{\n        border-color: ${p => p.theme.colors.accent};\n    }\n`;\n\nexport const IconForm = styled.div`\n    position: absolute;\n    top: 29px;\n    left: ${p => p.theme.space[3]}px;\n`;\n\nexport const ButtonForm = styled(ButtonStyled)`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    margin: 0 auto;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\nimport { selectContacts, selectIsFormLoading } from \"redux/contacts/contacts-selectors\";\nimport { FaUserEdit, FaPhoneAlt } from 'react-icons/fa';\nimport { BsPersonPlus } from 'react-icons/bs';\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport { BoxForm, FieldForm, InputForm, IconForm, ButtonForm, Error } from './ContactEditor.styled';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { theme } from 'theme';\nimport { Box } from \"components/Box/Box\";\n\nconst basicSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .required('Name is required'),\n    number: yup\n        .string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n        .required('Number is required'),\n});\n \nconst ContactEditor = ({onAdd}) => {\n    const contacts = useSelector(selectContacts);\n    const isFormLoading = useSelector(selectIsFormLoading);\n    const dispatch = useDispatch();\n\n    const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n        initialValues: {\n            name: '',\n            number: '',\n        },\n        validationSchema: basicSchema,\n        onSubmit: ({ name, number }, { resetForm }) => {\n            console.log(name, number);\n\n            const normalizedName = name.toLowerCase();\n\n            const checkByName = contacts.find(contact =>\n                contact.name.toLowerCase() === normalizedName);\n\n            if (checkByName) {\n                return toast(`${name} is already in contacts.`, { icon: 'ℹ️'});\n            };\n\n            const contact = {\n                name,\n                number,\n            };\n\n            dispatch(addContact(contact));\n            toast.success('Contact added!');\n\n            onAdd();\n\n            resetForm();\n        },\n    });\n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    return (\n        <BoxForm onSubmit={handleSubmit}>\n            <Box fontSize={theme.fontSizes.l}\n                fontWeight={theme.fontWeights.bold}\n                as=\"strong\">Create new contact</Box>\n            <FieldForm htmlFor={nameId}>Name\n                <IconForm><FaUserEdit size={15} /></IconForm>\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameId}\n                    value={values.name}\n                    placeholder=\"Alexander Repeta\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} /> \n                {errors.name && touched.name && <Error>{errors.name}</Error>}\n            </FieldForm>\n            <FieldForm htmlFor={numberId}>Phone number\n                <IconForm><FaPhoneAlt size={15} /></IconForm>\n                <InputForm\n                    type=\"tel\"\n                    name=\"number\"\n                    id={numberId}\n                    value={values.number}\n                    placeholder=\"+38-(012)-345-67-89\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} />\n                {errors.number && touched.number &&<Error>{errors.number}</Error>}\n            </FieldForm>    \n            <ButtonForm type=\"submit\">{isFormLoading ? 'Adding...' : 'Add contact'}\n                <BsPersonPlus />\n            </ButtonForm>        \n        </BoxForm> \n    );\n};\n    \nexport default ContactEditor;\n\nContactEditor.propsType = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\n","import styled from '@emotion/styled';\n\nexport const ContactText = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n`\n\nexport const ContactPhone = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    min-width: 220px;\n    text-align: left;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contacts-operations\";\nimport { Button } from \"components/Button/Button\";\nimport { ContactText, ContactPhone } from \"./Contact.styled\";\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { MdPhoneIphone } from 'react-icons/md';\n\nimport { Box } from '../Box/Box';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, number } ) => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => dispatch(deleteContact(id));\n  \n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"70%\">\n        <ContactText>\n          <BsFillPersonFill />\n          {name}\n        </ContactText>\n        <ContactPhone>\n          <MdPhoneIphone />\n          {number}\n        </ContactPhone>\n      </Box>\n      \n      <Button type=\"button\" onClick={handleDelete}>\n        <AiOutlineDelete size={18} />\n      </Button>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n    position: relative;\n    min-width: ${p => p.theme.sizes.minWidth};\n    max-width: ${p => p.theme.sizes.maxWidth};\n    margin-left: auto;\n    margin-right: auto;\n    background-color: ${p => p.theme.colors.white};\n    padding: ${p => p.theme.space[4]}px;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.radii.box};\n    box-shadow: ${p => p.theme.shadows.box};\n`;\n\nexport const ContactItem = styled.li`\n    width: 100%;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[0]}px;\n    padding-right: ${p => p.theme.space[0]}px;\n    \n    font-size: ${p => p.theme.fontSizes.m};\n\n    transform: scale(1);\n    transition: ${p => p.theme.transition.main};\n\n    :not(:first-of-type){\n       border-top: ${p => p.theme.borders.normal}; \n    }\n\n    :hover,\n    :focus{\n        position: absolute;\n        transform: scale(1.02);\n        width: 100%;\n        right: 0;\n        z-index: 2;\n        padding: ${p => p.theme.space[4]}px;\n        \n        border-top: ${p => p.theme.borders.none}; \n        border-radius: ${p => p.theme.radii.box};\n        box-shadow: ${p => p.theme.shadows.box};\n\n        background-color: ${p => p.theme.colors.white};\n    } \n`;","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport { Contacts, ContactItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Contacts>\n            {visibleContacts.map(({ id, name, number }) =>\n                <ContactItem key={id}>\n                    <Contact id={id} name={name} number={number}/>\n                </ContactItem>\n            )}\n        </Contacts>\n    );\n}; \n\n\n","import styled from '@emotion/styled';\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: ${p => p.theme.radii.normal};\n    \n    background-color: inherit;\n\n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"redux/filter/filter-selectors\";\nimport { setFilter } from \"redux/contacts/contacts-slice\";\nimport { FieldFilter, InputFilter } from \"./Filter.styled\";\nimport { Box } from \"components/Box/Box\";\nimport { theme } from \"theme\";\nimport { Button } from \"components/Button/Button\";\nimport { BsPersonPlus } from 'react-icons/bs';\n\nexport const Filter = ({onClick}) => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value));\n    };\n\n    return (\n        <Box minWidth={theme.sizes.minWidth}\n            mb={3}\n            mx=\"auto\"\n            p={3}\n            textAlign=\"left\"\n            maxWidth={theme.sizes.mediumWidth}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContaent=\"center\"\n            gridGap={[2, 2, 3]}\n            borderRadius={theme.radii.box}\n            boxShadow={theme.shadows.box}\n            backgroundColor={theme.colors.white}>\n            <FieldFilter htmlFor=\"\">\n                <InputFilter\n                    type=\"text\"\n                    value={filter}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={changeFilter}\n                />\n            </FieldFilter>\n            \n            <Button onClick={onClick} aria-label=\"Add contact\">\n                <BsPersonPlus size={18}/>\n            </Button>\n        </Box>\n    );\n};   ","import styled from '@emotion/styled';\n\nexport const Content = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-width: ${p => p.theme.sizes.mediumWidth};\n    min-width: ${p => p.theme.sizes.minWidth};\n    width: 100%;\n    margin-left: ${p => p.theme.space[4]}px;\n    margin-right: ${p => p.theme.space[4]}px;\n    padding: ${p => p.theme.space[5]}px;\n    background-color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.radii.box};\n    box-shadow: ${p => p.theme.shadows.box};\n    `","import { Box } from 'components/Box/Box';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Content } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                console.log('Нажали ESC, нужно закрыть модалку');\n\n                onClose();\n            };\n        };\n        \n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            };\n    }, [onClose]);\n\n    const handleBackdropClick = e => {\n        console.log('Кликнули в бекдроп');\n\n        if (e.currentTarget === e.target) {\n            onClose();\n        }\n    }\n\n    return createPortal( \n        <Box position=\"fixed\"\n            top={0}\n            left={0}\n            width=\"100vw\"\n            height=\"100vh\"\n            bg=\"rgba(0, 0, 0, 0.5)\"\n            onClick={handleBackdropClick}>\n            <Content>{children}</Content>\n        </Box>,\n        modalRoot,\n    )\n}\n\nModal.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n};","import { Box } from \"components/Box/Box\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { theme } from 'theme';\n\nexport const Loader = () => (\n    <Box display=\"flex\" justifyContent=\"center\">\n        <SyncLoader color={theme.colors.accent}/>\n    </Box>\n  \n);","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from \"components/Filter/Filter\";\nimport { Modal } from 'components/Modal/Modal';\nimport { Loader } from \"components/Loader/Loader\";\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\nimport toast from 'react-hot-toast';\nimport { Box } from '../components/Box/Box';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    error && toast.error('No response from server!');\n  }, [dispatch, error]);\n\n  const showContacs = isLoading && !error;\n\n  return (\n    <Box p=\"16px 0\" as=\"main\">\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      \n      <Filter onClick={toggleModal} />\n      \n      {showContacs ? <Loader /> : <ContactList />}\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactEditor onAdd={toggleModal} />\n        </Modal>\n      )}\n    </Box>\n  );\n}"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsFormLoading","isFormLoading","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","BoxForm","styled","p","theme","space","FieldForm","colors","accent","InputForm","radii","normal","IconForm","ButtonForm","ButtonStyled","Error","basicSchema","yup","shape","min","max","matches","required","number","ContactEditor","onAdd","useSelector","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","normalizedName","checkByName","find","contact","toast","icon","addContact","values","errors","touched","handleBlur","handleChange","handleSubmit","nameId","nanoid","numberId","Box","fontSize","fontWeight","as","htmlFor","size","type","id","value","placeholder","onChange","onBlur","propsType","PropTypes","ContactText","ContactPhone","Contact","display","alignItems","justifyContent","width","Button","onClick","deleteContact","Contacts","sizes","minWidth","maxWidth","white","box","shadows","ContactItem","fontSizes","m","transition","main","borders","none","ContactList","visibleContacts","map","FieldFilter","InputFilter","s","Filter","mb","mx","textAlign","justifyContaent","gridGap","borderRadius","boxShadow","backgroundColor","e","setFilter","currentTarget","Content","mediumWidth","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","position","top","left","height","bg","target","Loader","color","useState","isModalOpen","setIsModalOpen","toggleModal","fetchContacts","showContacs","Helmet"],"sourceRoot":""}