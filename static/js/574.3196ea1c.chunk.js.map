{"version":3,"file":"static/js/574.3196ea1c.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsFormLoading = state => state.contacts.isFormLoading;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter)\n        );\n});","import styled from '@emotion/styled';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport { theme } from 'theme';\n\nexport const BoxForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: ${p => p.theme.space[4]}px;\n\n    min-width: ${p => p.theme.sizes.minWidth};\n    border: ${p => p.theme.borders.button};\n    border-radius: ${p => p.theme.radii.normal};\n    box-shadow: ${p => p.theme.shadows.boxShadow};\n    padding-top: ${p => p.theme.space[4]}px;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const FieldForm = styled.label`\n    width: 100%;\n    text-align: left;\n`;\n\nexport const InputForm = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n\n    ::placeholder {\n        font-size: ${p => theme.fontSizes.s};\n    }\n`;\n\nexport const ButtonForm = styled(ButtonStyled)`\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    padding-right: ${p => p.theme.space[4]}px;\n    min-width: 124px;\n`;\n\nexport const Error = styled.p`\n    color: ${p => p.theme.colors.error};\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\nimport { selectContacts, selectIsFormLoading } from \"redux/contacts/contacts-selectors\";\nimport toast from 'react-hot-toast';\nimport { nanoid } from 'nanoid';\nimport { BoxForm, FieldForm, InputForm, ButtonForm, Error } from './ContactEditor.styled';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst basicSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .matches(\n            /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .required('Name is required'),\n    phone: yup\n        .string()\n        .matches(\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n        .required('Number is required'),\n});\n \nconst ContactEditor = () => {\n    const contacts = useSelector(selectContacts);\n    const isFormLoading = useSelector(selectIsFormLoading);\n    const dispatch = useDispatch();\n\n    const { values, errors, touched, handleBlur, handleChange, handleSubmit } = useFormik({\n        initialValues: {\n            name: '',\n            phone: '',\n        },\n        validationSchema: basicSchema,\n        onSubmit: ({ name, phone }, { resetForm }) => {\n            console.log(name, phone);\n\n            const normalizedName = name.toLowerCase();\n\n            const checkByName = contacts.find(contact =>\n                contact.name.toLowerCase() === normalizedName);\n\n            if (checkByName) {\n                return toast(`${name} is already in contacts.`, { icon: 'ℹ️'});\n            };\n\n            const contact = {\n                name,\n                phone,\n            };\n\n            dispatch(addContact(contact));\n            toast.success('Contact added!');\n\n            resetForm();\n        },\n    });\n\n    const nameId = nanoid();\n    const phoneId = nanoid();\n\n    return (\n        <BoxForm onSubmit={handleSubmit}>\n            <FieldForm htmlFor={nameId}>Name\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameId}\n                    value={values.name}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} /> \n                {errors.name && touched.name && <Error>{errors.name}</Error>}\n            </FieldForm>\n            <FieldForm htmlFor={phoneId}>Phone number\n                <InputForm\n                    type=\"tel\"\n                    name=\"phone\"\n                    id={phoneId}\n                    value={values.phone}\n                    placeholder=\"+38-(012)-345-67-89\"\n                    onChange={handleChange}\n                    onBlur={handleBlur} />\n                {errors.phone && touched.phone &&<Error>{errors.phone}</Error>}\n            </FieldForm>    \n            <ButtonForm type=\"submit\">{isFormLoading ? 'Adding...' : 'Add contact'}\n            </ButtonForm>        \n        </BoxForm> \n    );\n};\n    \nexport default ContactEditor;\n\n","import styled from '@emotion/styled';\n\nexport const ContactText = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[0]}px;\n    padding-right: ${p => p.theme.space[0]}px;\n`\n\nexport const ContactPhone = styled.p`\n    display: flex;\n    align-items: center;;\n    gap: ${p => p.theme.space[2]}px;\n    min-width: 220px;\n    text-align: left;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contacts-operations\";\nimport { Button } from \"components/Button/Button\";\nimport { ContactText, ContactPhone } from \"./Contact.styled\";\nimport { AiOutlineUserAdd, AiOutlineDelete } from 'react-icons/ai';\nimport { BsTelephonePlus } from 'react-icons/bs';\nimport { Box } from '../Box/Box';\nimport PropTypes from 'prop-types';\n\nexport const Contact = ({ id, name, phone } ) => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => dispatch(deleteContact(id));\n  \n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"70%\">\n        <ContactText>\n          <AiOutlineUserAdd size={18} color={\"#1976d2\"} />\n          {name}\n        </ContactText>\n        <ContactPhone>\n          <BsTelephonePlus size={17} color={\"#1976d2\"} />\n          {phone}\n        </ContactPhone>\n      </Box>\n      \n      <Button type=\"button\" onClick={handleDelete}>\n        <AiOutlineDelete size={18} />\n      </Button>\n    </Box>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n    min-width: ${p => p.theme.sizes.minWidth};\n`;\n\nexport const ContactItem = styled.li`\n    /* display: flex;\n    justify-content: space-between;\n    align-items: center; */\n    width: 100%;\n    \n    font-size: ${p => p.theme.fontSizes.m};\n\n    :not(:first-of-type){\n       border-top: ${p => p.theme.borders.normal}; \n    }\n`;","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { selectVisibleContacts } from \"redux/contacts/contacts-selectors\";\nimport { Contacts, ContactItem } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Contacts>\n            {visibleContacts.map(({ id, name, phone }) =>\n                <ContactItem key={id}>\n                    <Contact id={id} name={name} phone={phone}/>\n                </ContactItem>\n            )}\n        </Contacts>\n    );\n}; \n\n\n","import styled from '@emotion/styled';\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    margin-top: ${p => p.theme.space[2]}px; \n    padding-top: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    width: 100%;\n    font: inherit;\n\n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"redux/contacts/contacts-selectors\";\nimport { setFilter } from \"../../redux/contacts/contacts-slice\";\nimport { FieldFilter, InputFilter } from \"./Filter.styled\";\nimport { Box } from \"components/Box/Box\";\nimport { theme } from \"theme\";\n\nexport const Filter = ({ onChange }) => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value));\n    };\n\n    return (\n        <Box minWidth={theme.sizes.minWidth} mb={4} textAlign=\"left\">\n            <FieldFilter htmlFor=\"\">Find contacts by name\n                <InputFilter\n                    type=\"text\"\n                    value={filter}\n                    placeholder=\"Ivan Petrov\"\n                    onChange={changeFilter}\n                />\n            </FieldFilter>\n        </Box>\n    );\n};   ","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from \"components/Filter/Filter\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\nimport toast from 'react-hot-toast';\n// import { Box } from '../Box/Box';\nimport { theme } from 'theme';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    error && toast.error('No response from server!');\n  }, [dispatch, error]);\n\n  const showContacs = isLoading && !error;\n\n  return (\n    <main>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <Filter />\n      {showContacs ? <SyncLoader color={theme.colors.accent} /> : <ContactList />}\n    </main>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectIsFormLoading","isFormLoading","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","BoxForm","styled","p","theme","space","sizes","minWidth","borders","button","radii","normal","shadows","boxShadow","FieldForm","InputForm","ButtonForm","ButtonStyled","Error","colors","basicSchema","yup","shape","min","max","matches","required","phone","useSelector","dispatch","useDispatch","useFormik","initialValues","validationSchema","onSubmit","resetForm","console","log","normalizedName","checkByName","find","contact","toast","icon","addContact","values","errors","touched","handleBlur","handleChange","handleSubmit","nameId","nanoid","phoneId","htmlFor","type","id","value","placeholder","onChange","onBlur","ContactText","ContactPhone","Contact","Box","display","alignItems","justifyContent","width","size","color","Button","onClick","deleteContact","Contacts","ContactItem","fontSizes","m","ContactList","visibleContacts","map","FieldFilter","InputFilter","s","Filter","mb","textAlign","e","setFilter","currentTarget","useEffect","fetchContacts","showContacs","Helmet"],"sourceRoot":""}